// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Blobs;
using Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Commits;
using Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.MatchingRefs;
using Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Ref;
using Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Refs;
using Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Tags;
using Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Trees;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git
{
    /// <summary>
    /// Builds and executes requests for operations under \repos\{owner-id}\{repo-id}\git
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class GitRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The blobs property</summary>
        public global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Blobs.BlobsRequestBuilder Blobs
        {
            get => new global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Blobs.BlobsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The commits property</summary>
        public global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Commits.CommitsRequestBuilder Commits
        {
            get => new global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Commits.CommitsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The matchingRefs property</summary>
        public global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.MatchingRefs.MatchingRefsRequestBuilder MatchingRefs
        {
            get => new global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.MatchingRefs.MatchingRefsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ref property</summary>
        public global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Ref.RefRequestBuilder Ref
        {
            get => new global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Ref.RefRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The refs property</summary>
        public global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Refs.RefsRequestBuilder Refs
        {
            get => new global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Refs.RefsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tags property</summary>
        public global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Tags.TagsRequestBuilder Tags
        {
            get => new global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Tags.TagsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The trees property</summary>
        public global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Trees.TreesRequestBuilder Trees
        {
            get => new global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.Trees.TreesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.GitRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public GitRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{owner%2Did}/{repo%2Did}/git", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.GitHub.OpenApiClient.Repos.Item.Item.Git.GitRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public GitRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{owner%2Did}/{repo%2Did}/git", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
